diff -Naur orig/pppd/auth.c patched/pppd/auth.c
--- orig/pppd/auth.c	2009-11-16 23:26:07.000000000 +0100
+++ patched/pppd/auth.c	2012-03-31 19:58:22.650037521 +0200
@@ -243,6 +243,11 @@
 
 extern char *crypt __P((const char *, const char *));
 
+#ifdef NOEXT_TRAFFIC
+/* Boolean to care for external traffic or not. Defined in options.c */
+extern int noexttraffic;
+#endif
+
 /* Prototypes for procedures local to this file. */
 
 static void network_phase __P((int));
@@ -1190,6 +1195,14 @@
 	tlim = idle_time_hook(&idle);
     } else {
 	itime = MIN(idle.xmit_idle, idle.recv_idle);
+#ifdef NOEXT_TRAFFIC  /* modified version, additional commandline-switch noext-traffic */
+	if (!noexttraffic)
+		itime = MIN(idle.xmit_idle, idle.recv_idle);
+	else
+		itime = idle.xmit_idle;
+#else  /* standard version */
+          itime = MIN(idle.xmit_idle, idle.recv_idle);
+#endif
 	tlim = idle_time_limit - itime;
     }
     if (tlim <= 0) {
diff -Naur orig/pppd/Makefile.linux patched/pppd/Makefile.linux
--- orig/pppd/Makefile.linux	2009-11-16 23:26:07.000000000 +0100
+++ patched/pppd/Makefile.linux	2012-03-31 19:57:03.575819400 +0200
@@ -60,6 +60,8 @@
 # Linux distributions: Please leave TDB ENABLED in your builds.
 USE_TDB=y
 
+NOEXT_TRAFFIC=y
+
 HAS_SHADOW=y
 #USE_PAM=y
 #HAVE_INET6=y
@@ -93,7 +95,9 @@
 CFLAGS   += -DMPPE=1
 endif
 endif
-
+ifdef NOEXT_TRAFFIC
+CFLAGS += -DNOEXT_TRAFFIC
+endif
 # EAP SRP-SHA1
 ifdef USE_SRP
 CFLAGS	+= -DUSE_SRP -DOPENSSL -I/usr/local/ssl/include
diff -Naur orig/pppd/options.c patched/pppd/options.c
--- orig/pppd/options.c	2009-11-16 23:26:07.000000000 +0100
+++ patched/pppd/options.c	2012-03-31 19:57:03.631815299 +0200
@@ -119,7 +119,9 @@
 bool	dryrun;			/* print out option values and exit */
 char	*domain;		/* domain name set by domain option */
 int	child_wait = 5;		/* # seconds to wait for children at exit */
-
+#ifdef NOEXT_TRAFFIC
+int noexttraffic = 0; /* decide whether or not we want to care for traffic from extern */
+#endif
 #ifdef MAXOCTETS
 unsigned int  maxoctets = 0;    /* default - no limit */
 int maxoctets_dir = 0;       /* default - sum of traffic */
@@ -308,6 +310,10 @@
       "set filter for active pkts", OPT_PRIO },
 #endif
 
+#ifdef NOEXT_TRAFFIC
+    { "noext-traffic", o_bool, (void *)&noexttraffic, "ignore external pkts for timeout", 1 },
+#endif
+
 #ifdef MAXOCTETS
     { "maxoctets", o_int, &maxoctets,
       "Set connection traffic limit",
diff -Naur orig/pppd/pppd.8 patched/pppd/pppd.8
--- orig/pppd/pppd.8	2009-11-16 23:26:07.000000000 +0100
+++ patched/pppd/pppd.8	2012-03-31 19:57:03.651813844 +0200
@@ -292,6 +292,20 @@
 \fIdebug\fR.  This information can be directed to a file by setting up
 /etc/syslog.conf appropriately (see syslog.conf(5)).
 .TP
+.B noext\-traffic
+Do not count incoming traffic against the idle time set with the idle
+option.  The default idle option behavior is to count both outgoing
+and incoming traffic.  This can be very helpful when remote hosts
+keeping sending unwanted traffic, thereby keeping the connection up.
+
+Note that this \fIcannot\fR prevent programs from responding to incoming
+requests and in doing so defeat the idle option.  The route program
+\fIreject\fR parameter might help in that case when enough is known about
+IP address space of the site generating the unwanted requests.  If you
+initiated contact with the site generating the requests, say with a
+web browser, then denying ingress with the "reject" parameter probably
+won't be a viable option.
+.
 .B default\-asyncmap
 Disable asyncmap negotiation, forcing all control characters to be
 escaped for both the transmit and the receive direction.
