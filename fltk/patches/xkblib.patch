diff -Naur orig/src/Fl_x.cxx patched/src/Fl_x.cxx
--- orig/src/Fl_x.cxx	2012-10-16 17:35:34.000000000 +0200
+++ patched/src/Fl_x.cxx	2015-01-25 16:26:55.234796477 +0100
@@ -42,7 +42,7 @@
 #  include <X11/Xmd.h>
 #  include <X11/Xlocale.h>
 #  include <X11/Xlib.h>
-#  include <X11/keysym.h>
+#  include <X11/XKBlib.h>
 #define USE_XRANDR (HAVE_DLSYM && HAVE_DLFCN_H) // means attempt to dynamically load libXrandr.so
 #if USE_XRANDR
 #include <dlfcn.h>
@@ -1322,7 +1322,7 @@
 	  len = XUtf8LookupString(fl_xim_ic, (XKeyPressedEvent *)&xevent.xkey,
 			     buffer, buffer_len, &keysym, &status);
 	}
-	keysym = XKeycodeToKeysym(fl_display, keycode, 0);
+	keysym = XkbKeycodeToKeysym(fl_display, keycode, 0, 0);
       } else {
         //static XComposeStatus compose;
         len = XLookupString((XKeyEvent*)&(xevent.xkey),
@@ -1334,7 +1334,7 @@
           if (len < 1) len = 1;
           // ignore all effects of shift on the keysyms, which makes it a lot
           // easier to program shortcuts and is Windoze-compatible:
-          keysym = XKeycodeToKeysym(fl_display, keycode, 0);
+          keysym = XkbKeycodeToKeysym(fl_display, keycode, 0, 0);
         }
       }
       // MRS: Can't use Fl::event_state(FL_CTRL) since the state is not
@@ -1380,7 +1380,7 @@
       event = FL_KEYUP;
       fl_key_vector[keycode/8] &= ~(1 << (keycode%8));
       // keyup events just get the unshifted keysym:
-      keysym = XKeycodeToKeysym(fl_display, keycode, 0);
+      keysym = XkbKeycodeToKeysym(fl_display, keycode, 0, 0);
     }
 #  ifdef __sgi
     // You can plug a microsoft keyboard into an sgi but the extra shift
@@ -1473,7 +1473,7 @@
     if (keysym >= 0xff91 && keysym <= 0xff9f) {
       // Map keypad keysym to character or keysym depending on
       // numlock state...
-      unsigned long keysym1 = XKeycodeToKeysym(fl_display, keycode, 1);
+      unsigned long keysym1 = XkbKeycodeToKeysym(fl_display, keycode, 1, 0);
       if (keysym1 <= 0x7f || (keysym1 > 0xff9f && keysym1 <= FL_KP_Last))
         Fl::e_original_keysym = (int)(keysym1 | FL_KP);
       if ((xevent.xkey.state & Mod2Mask) &&
