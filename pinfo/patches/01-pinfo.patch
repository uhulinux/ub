diff -Naurd a/doc/pinfo.texi b/doc/pinfo.texi
--- a/doc/pinfo.texi	2006-03-16 16:40:41.000000000 +0100
+++ b/doc/pinfo.texi	2010-11-10 19:06:57.000000000 +0100
@@ -5,7 +5,7 @@
 @c %**end of header
 
 @set EDITION 0.2.1
-@set VERSION 0.6.4
+@set VERSION 0.6.10
 @set DATE 1 Dec 2001
 @set DATEMAN 21 Mar 1999
 
diff -Naurd a/macros/curses.m4 b/macros/curses.m4
--- a/macros/curses.m4	2006-03-09 20:44:48.000000000 +0100
+++ b/macros/curses.m4	2010-11-10 19:18:00.000000000 +0100
@@ -257,8 +257,8 @@
 	dnl save CFLAGS and LDFLAGS and set new ones
 	CFLAGS_OLD=$CFLAGS
 	CFLAGS="$CFLAGS $curses_includes"
-	LDFLAGS_OLD=$LDFLAGS
-	LDFLAGS="$LDFLAGS $curses_libs"
+	LIBS_OLD=$LIBS
+	LIBS="$LIBS $curses_libs"
 
 	dnl do the compile test 
 	AC_MSG_CHECKING([if curses is usable])
@@ -288,7 +288,7 @@
 
 	dnl restore variables
 	CFLAGS=$CFLAGS_OLD
-	LDFLAGS=$LDFLAGS_OLD
+	LIBS=$LIBS_OLD
 
 ])
 
diff -Naurd a/src/filehandling_functions.c b/src/filehandling_functions.c
--- a/src/filehandling_functions.c	2010-09-19 15:20:39.000000000 +0200
+++ b/src/filehandling_functions.c	2011-11-24 06:45:58.000000000 +0100
@@ -41,14 +41,16 @@
  * you dump the file through `gunzip -d -c', etc.                              *
  ******************************************************************************/
 
-#define SuffixesNumber 4
+#define SuffixesNumber 6
 
 Suffixes suffixes[SuffixesNumber] =
 {
 	{"", 		"cat"},
 	{".gz",		"gzip -d -q -c"},
 	{".Z",		"gzip -d -q -c"},
-	{".bz2",	"bzip2 -d -c"}
+	{".bz2", 	"bzip2 -d -c"},
+	{".lzma", 	"lzma -d -c"},
+	{".xz", 	"xz -d -c"} 
 };
 
 /*****************************************************************************/
@@ -65,65 +67,18 @@
 }
 
 int
-matchfile(char **buf, char *name)
+matchfile(char *buf)
 {
-#define Buf	(*buf)
-	DIR *dir;
-	char *bname = basename(name);
-	struct dirent *dp;
-	int matched = 0;
-	
-	/* remove a possible ".info" from the end of the file name
-	 * we're looking for */
-	strip_info_suffix(bname);
-
-	/* fix the name of the dir */
-	if (Buf[strlen(Buf)-1]!='/')
-	{
-		strcat(Buf,"/");
-	}
-	strncat(Buf,name,bname-name);
-
-	/* open the directory */
-	dir = opendir(Buf);
-	if (dir == NULL)
-	{
-		return 0;
-	}
-
-	/* iterate over all files in the directory */
-	while ((dp = readdir(dir)) != NULL)
-	{
-		/* use strcat rather than strdup, because xmalloc handles all 
-		 * malloc errors */
-		char *thisfile = xmalloc(strlen(dp->d_name)+1);
-		strcat(thisfile, dp->d_name);
-
-		/* strip suffixes (so "gcc.info.gz" -> "gcc") */
-		strip_compression_suffix(thisfile);
-		strip_info_suffix(thisfile);
-
-		/* compare this file with the file we're looking for */
-		if (strcmp(thisfile,bname) == 0)
-		{
-			/* we found a match! */
-			matched++;
-			/* put it in the buffer */
-			strncat(Buf, thisfile, 1023-strlen(Buf));
-			strncat(Buf, ".info", 1023-strlen(Buf));
-
-			/* clean up, and exit the loop */
-			xfree(thisfile);
-			break;
-		}
-		xfree(thisfile);
+	int buf_end_pos = strlen (buf);
+	int j;
+	for (j = 0; j < SuffixesNumber; ++j) {
+	    buf[buf_end_pos] = 0;
+	    strcat (buf, suffixes[j].suffix);
+	    if (access (buf, F_OK))
+		continue;
+	    return j;
 	}
-	closedir(dir);
-
-	if (matched) return 1;
-
-	return 0;
-#undef Buf
+	return -1;
 }
 
 FILE *
@@ -737,12 +692,11 @@
 {
 	FILE *id = NULL;
 	char *buf = xmalloc(1024);	/* holds local copy of filename */
-	char *bufend;			/* points at the trailing 0 of initial name */
 	char command[1128];		/* holds command to evaluate for decompression of file */
 	int i, j;
 	char *tmpfilename;
 
-	if (strncmp(filename, "dir", 3) == 0)
+	if (strncmp(filename, "dir", 3) == 0 && !isalnum(filename[3]))
 	{
 		xfree(buf);
 		return opendirfile(number);
@@ -771,6 +725,7 @@
 
 	for (i = -1; i < infopathcount; i++)	/* go through all paths */
 	{
+		int found_suffix = -1;
 		if (i == -1)
 		{
 			/*
@@ -785,37 +740,38 @@
 				strcat(buf, "/");
 				strcat(buf, basename(filename));
 			}
+			found_suffix = matchfile (buf);
 		}
 		else
 		{
 			/* build a filename */
 			strcpy(buf, infopaths[i]);
 			/* no match found in this directory */
-			if (! matchfile(&buf, filename))
-				continue;
+			int buf_len = strlen (buf);
+			if (buf_len > 1) {
+			    if (buf[buf_len -1 ] != '/')
+				strcat (buf, "/");
+			} else
+			    strcat (buf, "/");
+			strcat (buf, filename);
+			found_suffix = matchfile (buf);
+			if (found_suffix == -1) {
+			    if (strstr (filename, ".info") == NULL) {
+				strcat (buf, ".info");
+				found_suffix = matchfile (buf);
+			    }
+			}
 		}
-		bufend = buf;
-		/* remember the bufend to make it possible later to glue compression
-		 * suffixes. */
-		bufend += strlen(buf);
-		for (j = 0; j < SuffixesNumber; j++)	/* go through all suffixes */
-		{
-			strcat(buf, suffixes[j].suffix);
+		if (found_suffix >= 0) {
 			if ((id = fopen(buf, "r")) != NULL)
 			{
 				fclose(id);
 				clearfilenameprefix();
-				filenameprefix = strdup(buf);
-				{			/* small scope for removal of filename */
-					int prefixi, prefixlen = strlen(filenameprefix);
-					for (prefixi = prefixlen; prefixi > 0; prefixi--)
-						if (filenameprefix[prefixi] == '/')
-						{
-							filenameprefix[prefixi] = 0;
-							break;
-						}
-				}
-				buildcommand(command, suffixes[j].command, buf, tmpfilename);
+ 				filenameprefix = strdup(buf);
+				char *tmp = strrchr (filenameprefix, '/');
+				if (tmp)
+				    *tmp = 0;
+				buildcommand(command, suffixes[found_suffix].command, buf, tmpfilename);
 				system(command);
 				id = fopen(tmpfilename, "r");
 				if (id)
@@ -824,7 +780,6 @@
 					return id;
 				}
 			}
-			(*bufend) = 0;
 		}
 		
 		/* if we have a nonzero filename prefix, that is we view a set of
@@ -835,7 +790,6 @@
 			break;
 	}
 	xfree(buf);
-
 	
 	return 0;
 }
diff -Naurd a/src/manual.c b/src/manual.c
--- a/src/manual.c	2010-09-19 15:20:39.000000000 +0200
+++ b/src/manual.c	2010-11-10 19:19:15.000000000 +0100
@@ -261,6 +261,7 @@
 		xfree(tmpfilename1);
 	}
 	tmpfilename1 = make_tempfile();
+	putenv("GROFF_NO_SGR=true");
 
 #ifdef getmaxyx
 	init_curses();
diff -Naurd a/src/pinfo.c b/src/pinfo.c
--- a/src/pinfo.c	2006-03-09 20:44:48.000000000 +0100
+++ b/src/pinfo.c	2011-11-24 06:12:58.000000000 +0100
@@ -648,6 +648,8 @@
 		}
 		else
 		{
+			if(setgroups(1,&grwd->gr_gid))
+				printf(_("Security warning: Can't set groups to nogroups"));
 			if (!getgid() && !getuid())
 				setgid(grwd->gr_gid);
 			else
