diff -Naur grub-0.97.orig/configure grub-0.97/configure
--- grub-0.97.orig/configure	2007-08-14 18:49:58.000000000 +0200
+++ grub-0.97/configure	2007-08-14 18:57:32.000000000 +0200
@@ -7343,6 +7343,7 @@
   "netboot/Makefile" ) CONFIG_FILES="$CONFIG_FILES netboot/Makefile" ;;
   "util/grub-image" ) CONFIG_FILES="$CONFIG_FILES util/grub-image" ;;
   "util/grub-install" ) CONFIG_FILES="$CONFIG_FILES util/grub-install" ;;
+  "util/grub-convert" ) CONFIG_FILES="$CONFIG_FILES util/grub-convert" ;;
   "util/grub-md5-crypt" ) CONFIG_FILES="$CONFIG_FILES util/grub-md5-crypt" ;;
   "util/grub-terminfo" ) CONFIG_FILES="$CONFIG_FILES util/grub-terminfo" ;;
   "util/grub-set-default" ) CONFIG_FILES="$CONFIG_FILES util/grub-set-default" ;;
diff -Naur grub-0.97.orig/util/grub-convert.in grub-0.97/util/grub-convert.in
--- grub-0.97.orig/util/grub-convert.in	1970-01-01 01:00:00.000000000 +0100
+++ grub-0.97/util/grub-convert.in	2007-08-14 19:10:50.000000000 +0200
@@ -0,0 +1,190 @@
+#! /bin/sh
+
+# The 'convert' function extracted from grub-install.
+#   Copyright (C) 1999,2000,2001,2002,2003,2004 Free Software Foundation, Inc.
+#
+# This file is free software; you can redistribute it and/or modify it
+# under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+
+# Initialize some variables.
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+sbindir=@sbindir@
+libdir=@libdir@
+PACKAGE=@PACKAGE@
+VERSION=@VERSION@
+host_cpu=@host_cpu@
+host_os=@host_os@
+host_vendor=@host_vendor@
+pkglibdir=${libdir}/${PACKAGE}
+
+rootdir=/
+
+install_device=
+debug=no
+
+# Usage: convert os_device
+# Convert an OS device to the corresponding GRUB drive.
+# This part is OS-specific.
+convert () {
+    # First, check if the device file exists.
+    if test -e "$1"; then
+	:
+    else
+	echo "$1: Not found or not a block device." 1>&2
+	exit 1
+    fi
+
+    # Break the device name into the disk part and the partition part.
+    case "$host_os" in
+    linux*)
+	tmp_disk=`echo "$1" | sed -e 's%\([sh]d[a-z]\)[0-9]*$%\1%' \
+				  -e 's%\(d[0-9]*\)p[0-9]*$%\1%' \
+				  -e 's%\(fd[0-9]*\)$%\1%' \
+				  -e 's%/part[0-9]*$%/disc%' \
+				  -e 's%\(c[0-7]d[0-9]*\).*$%\1%'`
+	tmp_part=`echo "$1" | sed -e 's%.*/[sh]d[a-z]\([0-9]*\)$%\1%' \
+				  -e 's%.*d[0-9]*p%%' \
+				  -e 's%.*/fd[0-9]*$%%' \
+				  -e 's%.*/floppy/[0-9]*$%%' \
+				  -e 's%.*/\(disc\|part\([0-9]*\)\)$%\2%' \
+				  -e 's%.*c[0-7]d[0-9]*p%%'`
+	;;
+    gnu*)
+	tmp_disk=`echo "$1" | sed 's%\([sh]d[0-9]*\).*%\1%'`
+	tmp_part=`echo "$1" | sed "s%$tmp_disk%%"` ;;
+    freebsd* | kfreebsd*-gnu)
+	tmp_disk=`echo "$1" | sed 's%r\{0,1\}\([saw]d[0-9]*\).*$%r\1%' \
+			    | sed 's%r\{0,1\}\(da[0-9]*\).*$%r\1%'`
+	tmp_part=`echo "$1" \
+	    | sed "s%.*/r\{0,1\}[saw]d[0-9]\(s[0-9]*[a-h]\)%\1%" \
+       	    | sed "s%.*/r\{0,1\}da[0-9]\(s[0-9]*[a-h]\)%\1%"`
+	;;
+    netbsd* | knetbsd*-gnu)
+	tmp_disk=`echo "$1" | sed 's%r\{0,1\}\([sw]d[0-9]*\).*$%r\1d%' \
+	    | sed 's%r\{0,1\}\(fd[0-9]*\).*$%r\1a%'`
+	tmp_part=`echo "$1" \
+	    | sed "s%.*/r\{0,1\}[sw]d[0-9]\([abe-p]\)%\1%"`
+	;;
+    *)
+	echo "grub-install does not support your OS yet." 1>&2
+	exit 1 ;;
+    esac
+
+    # Get the drive name.
+    tmp_drive=`grep -v '^#' $device_map | grep "$tmp_disk *$" \
+	| sed 's%.*\(([hf]d[0-9][a-g0-9,]*)\).*%\1%'`
+
+    # If not found, print an error message and exit.
+    if test "x$tmp_drive" = x; then
+	echo "$1 does not have any corresponding BIOS drive." 1>&2
+	exit 1
+    fi
+
+    if test "x$tmp_part" != x; then
+	# If a partition is specified, we need to translate it into the
+	# GRUB's syntax.
+	case "$host_os" in
+	linux*)
+	    echo "$tmp_drive" | sed "s%)$%,`expr $tmp_part - 1`)%" ;;
+	gnu*)
+	    if echo $tmp_part | grep "^s" >/dev/null; then
+		tmp_pc_slice=`echo $tmp_part \
+		    | sed "s%s\([0-9]*\)[a-g]*$%\1%"`
+		tmp_drive=`echo "$tmp_drive" \
+		    | sed "s%)%,\`expr "$tmp_pc_slice" - 1\`)%"`
+	    fi
+	    if echo $tmp_part | grep "[a-g]$" >/dev/null; then
+		tmp_bsd_partition=`echo "$tmp_part" \
+		    | sed "s%[^a-g]*\([a-g]\)$%\1%"`
+		tmp_drive=`echo "$tmp_drive" \
+		    | sed "s%)%,$tmp_bsd_partition)%"`
+	    fi
+	    echo "$tmp_drive" ;;
+	freebsd* | kfreebsd*-gnu)
+	    if echo $tmp_part | grep "^s" >/dev/null; then
+		tmp_pc_slice=`echo $tmp_part \
+		    | sed "s%s\([0-9]*\)[a-h]*$%\1%"`
+		tmp_drive=`echo "$tmp_drive" \
+		    | sed "s%)%,\`expr "$tmp_pc_slice" - 1\`)%"`
+	    fi
+	    if echo $tmp_part | grep "[a-h]$" >/dev/null; then
+		tmp_bsd_partition=`echo "$tmp_part" \
+		    | sed "s%s\{0,1\}[0-9]*\([a-h]\)$%\1%"`
+		tmp_drive=`echo "$tmp_drive" \
+		    | sed "s%)%,$tmp_bsd_partition)%"`
+	    fi
+	    echo "$tmp_drive" ;;
+	netbsd* | knetbsd*-gnu)
+	    if echo $tmp_part | grep "^[abe-p]$" >/dev/null; then
+		tmp_bsd_partition=`echo "$tmp_part" \
+		    | sed "s%\([a-p]\)$%\1%"`
+		tmp_drive=`echo "$tmp_drive" \
+		    | sed "s%)%,$tmp_bsd_partition)%"`
+	    fi
+	    echo "$tmp_drive" ;;
+	esac
+    else
+	# If no partition is specified, just print the drive name.
+	echo "$tmp_drive"
+    fi
+}
+
+# Check the arguments.
+for option in "$@"; do
+    case "$option" in
+    --root-directory=*)
+	rootdir=`echo "$option" | sed 's/--root-directory=//'` ;;
+    --debug)
+	debug=yes ;;
+    -*)
+	echo "Unrecognized option \`$option'" 1>&2
+	usage
+	exit 1
+	;;
+    *)
+	if test "x$install_device" != x; then
+	    echo "More than one install_devices?" 1>&2
+	    usage
+	    exit 1
+	fi
+	install_device="${option}" ;;
+    esac
+done
+
+# If the debugging feature is enabled, print commands.
+if test $debug = yes; then
+    set -x
+fi
+
+# Initialize these directories here, since ROOTDIR was initialized.
+case "$host_os" in
+netbsd* | openbsd*)
+    # Because /boot is used for the boot block in NetBSD and OpenBSD, use /grub
+    # instead of /boot/grub.
+    grub_prefix=/grub
+    bootdir=${rootdir}
+    ;;
+*)
+    # Use /boot/grub by default.
+    bootdir=${rootdir}/boot
+    ;;
+esac
+
+grubdir=${bootdir}/grub
+device_map=${grubdir}/device.map
+
+install_device="`readlink -f "$install_device"`" || exit 1
+convert "$install_device"
+
diff -Naur grub-0.97.orig/util/grub-install.in grub-0.97/util/grub-install.in
--- grub-0.97.orig/util/grub-install.in	2007-08-14 18:54:00.000000000 +0200
+++ grub-0.97/util/grub-install.in	2007-08-14 19:03:08.000000000 +0200
@@ -85,107 +85,13 @@
 # Convert an OS device to the corresponding GRUB drive.
 # This part is OS-specific.
 convert () {
-    # First, check if the device file exists.
-    if test -e "$1"; then
-	:
+    local debugopt
+    if [ $debug = yes ]; then
+	debugopt="--debug"
     else
-	echo "$1: Not found or not a block device." 1>&2
-	exit 1
-    fi
-
-    # Break the device name into the disk part and the partition part.
-    case "$host_os" in
-    linux*)
-	tmp_disk=`echo "$1" | sed -e 's%\([sh]d[a-z]\)[0-9]*$%\1%' \
-				  -e 's%\(d[0-9]*\)p[0-9]*$%\1%' \
-				  -e 's%\(fd[0-9]*\)$%\1%' \
-				  -e 's%/part[0-9]*$%/disc%' \
-				  -e 's%\(c[0-7]d[0-9]*\).*$%\1%'`
-	tmp_part=`echo "$1" | sed -e 's%.*/[sh]d[a-z]\([0-9]*\)$%\1%' \
-				  -e 's%.*d[0-9]*p%%' \
-				  -e 's%.*/fd[0-9]*$%%' \
-				  -e 's%.*/floppy/[0-9]*$%%' \
-				  -e 's%.*/\(disc\|part\([0-9]*\)\)$%\2%' \
-				  -e 's%.*c[0-7]d[0-9]*p%%'`
-	;;
-    gnu*)
-	tmp_disk=`echo "$1" | sed 's%\([sh]d[0-9]*\).*%\1%'`
-	tmp_part=`echo "$1" | sed "s%$tmp_disk%%"` ;;
-    freebsd* | kfreebsd*-gnu)
-	tmp_disk=`echo "$1" | sed 's%r\{0,1\}\([saw]d[0-9]*\).*$%r\1%' \
-			    | sed 's%r\{0,1\}\(da[0-9]*\).*$%r\1%'`
-	tmp_part=`echo "$1" \
-	    | sed "s%.*/r\{0,1\}[saw]d[0-9]\(s[0-9]*[a-h]\)%\1%" \
-       	    | sed "s%.*/r\{0,1\}da[0-9]\(s[0-9]*[a-h]\)%\1%"`
-	;;
-    netbsd* | knetbsd*-gnu)
-	tmp_disk=`echo "$1" | sed 's%r\{0,1\}\([sw]d[0-9]*\).*$%r\1d%' \
-	    | sed 's%r\{0,1\}\(fd[0-9]*\).*$%r\1a%'`
-	tmp_part=`echo "$1" \
-	    | sed "s%.*/r\{0,1\}[sw]d[0-9]\([abe-p]\)%\1%"`
-	;;
-    *)
-	echo "grub-install does not support your OS yet." 1>&2
-	exit 1 ;;
-    esac
-
-    # Get the drive name.
-    tmp_drive=`grep -v '^#' $device_map | grep "$tmp_disk *$" \
-	| sed 's%.*\(([hf]d[0-9][a-g0-9,]*)\).*%\1%'`
-
-    # If not found, print an error message and exit.
-    if test "x$tmp_drive" = x; then
-	echo "$1 does not have any corresponding BIOS drive." 1>&2
-	exit 1
-    fi
-
-    if test "x$tmp_part" != x; then
-	# If a partition is specified, we need to translate it into the
-	# GRUB's syntax.
-	case "$host_os" in
-	linux*)
-	    echo "$tmp_drive" | sed "s%)$%,`expr $tmp_part - 1`)%" ;;
-	gnu*)
-	    if echo $tmp_part | grep "^s" >/dev/null; then
-		tmp_pc_slice=`echo $tmp_part \
-		    | sed "s%s\([0-9]*\)[a-g]*$%\1%"`
-		tmp_drive=`echo "$tmp_drive" \
-		    | sed "s%)%,\`expr "$tmp_pc_slice" - 1\`)%"`
-	    fi
-	    if echo $tmp_part | grep "[a-g]$" >/dev/null; then
-		tmp_bsd_partition=`echo "$tmp_part" \
-		    | sed "s%[^a-g]*\([a-g]\)$%\1%"`
-		tmp_drive=`echo "$tmp_drive" \
-		    | sed "s%)%,$tmp_bsd_partition)%"`
-	    fi
-	    echo "$tmp_drive" ;;
-	freebsd* | kfreebsd*-gnu)
-	    if echo $tmp_part | grep "^s" >/dev/null; then
-		tmp_pc_slice=`echo $tmp_part \
-		    | sed "s%s\([0-9]*\)[a-h]*$%\1%"`
-		tmp_drive=`echo "$tmp_drive" \
-		    | sed "s%)%,\`expr "$tmp_pc_slice" - 1\`)%"`
-	    fi
-	    if echo $tmp_part | grep "[a-h]$" >/dev/null; then
-		tmp_bsd_partition=`echo "$tmp_part" \
-		    | sed "s%s\{0,1\}[0-9]*\([a-h]\)$%\1%"`
-		tmp_drive=`echo "$tmp_drive" \
-		    | sed "s%)%,$tmp_bsd_partition)%"`
-	    fi
-	    echo "$tmp_drive" ;;
-	netbsd* | knetbsd*-gnu)
-	    if echo $tmp_part | grep "^[abe-p]$" >/dev/null; then
-		tmp_bsd_partition=`echo "$tmp_part" \
-		    | sed "s%\([a-p]\)$%\1%"`
-		tmp_drive=`echo "$tmp_drive" \
-		    | sed "s%)%,$tmp_bsd_partition)%"`
-	    fi
-	    echo "$tmp_drive" ;;
-	esac
-    else
-	# If no partition is specified, just print the drive name.
-	echo "$tmp_drive"
+	debugopt=""
     fi
+    grub-convert --root-directory="$rootdir" $debugopt "$@"
 }
 
 # Usage: resolve_symlink file
diff -Naur grub-0.97.orig/util/Makefile.in grub-0.97/util/Makefile.in
--- grub-0.97.orig/util/Makefile.in	2007-08-14 18:53:13.000000000 +0200
+++ grub-0.97/util/Makefile.in	2007-08-14 18:58:55.000000000 +0200
@@ -44,7 +44,7 @@
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
 	$(srcdir)/grub-image.in $(srcdir)/grub-install.in \
 	$(srcdir)/grub-md5-crypt.in $(srcdir)/grub-set-default.in \
-	$(srcdir)/grub-terminfo.in
+	$(srcdir)/grub-terminfo.in $(srcdir)/grub-convert.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.ac
@@ -53,7 +53,7 @@
 mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
 CONFIG_HEADER = $(top_builddir)/config.h
 CONFIG_CLEAN_FILES = grub-image grub-install grub-md5-crypt \
-	grub-terminfo grub-set-default
+	grub-terminfo grub-set-default grub-convert
 am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)"
 binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
 PROGRAMS = $(bin_PROGRAMS)
@@ -184,7 +184,7 @@
 sysconfdir = @sysconfdir@
 target_alias = @target_alias@
 sbin_SCRIPTS = grub-install grub-md5-crypt grub-terminfo \
-	grub-set-default
+	grub-set-default grub-convert
 
 noinst_SCRIPTS = grub-image mkbimage
 EXTRA_DIST = mkbimage
@@ -230,6 +230,8 @@
 	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
 grub-install: $(top_builddir)/config.status $(srcdir)/grub-install.in
 	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
+grub-convert: $(top_builddir)/config.status $(srcdir)/grub-convert.in
+	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
 grub-md5-crypt: $(top_builddir)/config.status $(srcdir)/grub-md5-crypt.in
 	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
 grub-terminfo: $(top_builddir)/config.status $(srcdir)/grub-terminfo.in
