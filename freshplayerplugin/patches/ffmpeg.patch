diff -Naur orig/cmake/ffmpeg-compat/cfg_avcodeccontext_get_buffer2.c patched/cmake/ffmpeg-compat/cfg_avcodeccontext_get_buffer2.c
--- orig/cmake/ffmpeg-compat/cfg_avcodeccontext_get_buffer2.c	1970-01-01 01:00:00.000000000 +0100
+++ patched/cmake/ffmpeg-compat/cfg_avcodeccontext_get_buffer2.c	2015-06-12 21:40:55.000000000 +0200
@@ -0,0 +1,5 @@
+#include <libavcodec/avcodec.h>
+int main(void) {
+    AVCodecContext c;
+    return sizeof(c.get_buffer2);
+}
diff -Naur orig/cmake/ffmpeg-compat/cfg_avcodecid.c patched/cmake/ffmpeg-compat/cfg_avcodecid.c
--- orig/cmake/ffmpeg-compat/cfg_avcodecid.c	1970-01-01 01:00:00.000000000 +0100
+++ patched/cmake/ffmpeg-compat/cfg_avcodecid.c	2015-06-12 21:40:55.000000000 +0200
@@ -0,0 +1,4 @@
+#include <libavcodec/avcodec.h>
+int main(void) {
+    return AV_CODEC_ID_NONE;
+}
diff -Naur orig/cmake/ffmpeg-compat/cfg_avpixelformat.c patched/cmake/ffmpeg-compat/cfg_avpixelformat.c
--- orig/cmake/ffmpeg-compat/cfg_avpixelformat.c	1970-01-01 01:00:00.000000000 +0100
+++ patched/cmake/ffmpeg-compat/cfg_avpixelformat.c	2015-06-12 21:40:55.000000000 +0200
@@ -0,0 +1,4 @@
+#include <libavcodec/avcodec.h>
+int main(void) {
+    return AV_PIX_FMT_NONE;
+}
diff -Naur orig/cmake/ffmpeg-compat/cfg_av_pix_fmt_vdpau.c patched/cmake/ffmpeg-compat/cfg_av_pix_fmt_vdpau.c
--- orig/cmake/ffmpeg-compat/cfg_av_pix_fmt_vdpau.c	1970-01-01 01:00:00.000000000 +0100
+++ patched/cmake/ffmpeg-compat/cfg_av_pix_fmt_vdpau.c	2015-06-12 21:40:55.000000000 +0200
@@ -0,0 +1,4 @@
+#include <libavcodec/avcodec.h>
+int main(void) {
+    return AV_PIX_FMT_VDPAU;
+}
diff -Naur orig/cmake/ffmpeg-compat/CMakeLists.txt patched/cmake/ffmpeg-compat/CMakeLists.txt
--- orig/cmake/ffmpeg-compat/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ patched/cmake/ffmpeg-compat/CMakeLists.txt	2015-06-12 21:40:55.000000000 +0200
@@ -0,0 +1,36 @@
+# FFmpeg (libav) interface changes over time. Something new arises, something getting deprecated.
+# This script checks some essential parts
+
+include(CheckSymbolExists)
+include(CheckCSourceCompiles)
+
+set(CMAKE_REQUIRED_LIBRARIES "${REQ_LIBRARIES}")
+set(CMAKE_REQUIRED_INCLUDES  "${REQ_INCLUDE_DIRS}")
+
+macro(MACRO_C_SOURCE_CHECK FILE_NAME HAVE_variable)
+    unset(${HAVE_variable} CACHE)
+    file(READ ${FILE_NAME} C_SRC)
+    CHECK_C_SOURCE_COMPILES("${C_SRC}" ${HAVE_variable})
+    if (NOT ${HAVE_variable})
+        set(${HAVE_variable} 0)
+    endif()
+endmacro()
+
+macro(MACRO_SYMBOL_CHECK SYMBOL HEADER_FILE HAVE_variable)
+    unset(${HAVE_variable} CACHE)
+    CHECK_SYMBOL_EXISTS(${SYMBOL} ${HEADER_FILE} ${HAVE_variable})
+    if (NOT ${HAVE_variable})
+        set(${HAVE_variable} 0)
+    endif()
+endmacro()
+
+MACRO_C_SOURCE_CHECK(cfg_avpixelformat.c HAVE_AVPixelFormat)
+MACRO_C_SOURCE_CHECK(cfg_av_pix_fmt_vdpau.c HAVE_AV_PIX_FMT_VDPAU)
+MACRO_C_SOURCE_CHECK(cfg_avcodecid.c HAVE_AVCodecID)
+MACRO_C_SOURCE_CHECK(cfg_avcodeccontext_get_buffer2.c HAVE_AVCodecContext_get_buffer2)
+
+MACRO_SYMBOL_CHECK(av_frame_alloc "libavcodec/avcodec.h" HAVE_av_frame_alloc)
+MACRO_SYMBOL_CHECK(av_frame_free "libavcodec/avcodec.h" HAVE_av_frame_free)
+MACRO_SYMBOL_CHECK(avcodec_free_context "libavcodec/avcodec.h" HAVE_avcodec_free_context)
+
+configure_file("ffmpeg-compat.h.in" "${CMAKE_BINARY_DIR}/ffmpeg-compat.h" @ONLY)
diff -Naur orig/cmake/ffmpeg-compat/ffmpeg-compat.h.in patched/cmake/ffmpeg-compat/ffmpeg-compat.h.in
--- orig/cmake/ffmpeg-compat/ffmpeg-compat.h.in	1970-01-01 01:00:00.000000000 +0100
+++ patched/cmake/ffmpeg-compat/ffmpeg-compat.h.in	2015-06-12 21:40:55.000000000 +0200
@@ -0,0 +1,7 @@
+#define HAVE_AVPixelFormat              (@HAVE_AVPixelFormat@)
+#define HAVE_AV_PIX_FMT_VDPAU           (@HAVE_AV_PIX_FMT_VDPAU@)
+#define HAVE_AVCodecID                  (@HAVE_AVCodecID@)
+#define HAVE_AVCodecContext_get_buffer2 (@HAVE_AVCodecContext_get_buffer2@)
+#define HAVE_av_frame_alloc             (@HAVE_av_frame_alloc@)
+#define HAVE_av_frame_free              (@HAVE_av_frame_free@)
+#define HAVE_avcodec_free_context       (@HAVE_avcodec_free_context@)
diff -Naur orig/CMakeLists.txt patched/CMakeLists.txt
--- orig/CMakeLists.txt	2015-06-10 19:49:55.000000000 +0200
+++ patched/CMakeLists.txt	2015-06-12 21:40:55.000000000 +0200
@@ -116,6 +116,8 @@
     list(APPEND REQ_LIBRARY_DIRS ${HWDEC_LIBRARY_DIRS})
     list(APPEND REQ_INCLUDE_DIRS ${HWDEC_INCLUDE_DIRS})
     list(APPEND REQ_LIBRARIES    ${HWDEC_LIBRARIES})
+    add_subdirectory(cmake/ffmpeg-compat)
+    include_directories("${CMAKE_BINARY_DIR}")
 endif()
 
 list(APPEND REQ_LIBRARIES img-resources)
diff -Naur orig/src/np_functions.c patched/src/np_functions.c
--- orig/src/np_functions.c	2015-06-10 19:49:55.000000000 +0200
+++ patched/src/np_functions.c	2015-06-12 21:40:55.000000000 +0200
@@ -1448,6 +1448,7 @@
             browser_window = None;
         ev->window = browser_window;
 
+        pthread_mutex_lock(&display.lock);
         GdkEvent *gev = make_gdk_key_event_from_x_key(ev);
         if (gev) {
             // tie catcher_widget to GdkWindow
@@ -1463,9 +1464,12 @@
             }
 
             gdk_event_free(gev);
-            if (stop)
+            if (stop) {
+                pthread_mutex_unlock(&display.lock);
                 return 1;
+            }
         }
+        pthread_mutex_unlock(&display.lock);
     }
 
     char            buffer[20];
@@ -1476,7 +1480,10 @@
     PP_Resource     pp_event;
     unsigned int    mod;
 
+    pthread_mutex_lock(&display.lock);
     charcount = XLookupString(ev, buffer, sizeof(buffer), &keysym, &compose_status);
+    pthread_mutex_unlock(&display.lock);
+
     pp_keycode = xkeycode_to_pp_keycode(keysym);
     mod = x_state_mask_to_pp_inputevent_modifier(ev->state);
     mod = mod | get_left_right_pp_flag(keysym);
diff -Naur orig/src/ppb_video_decoder.c patched/src/ppb_video_decoder.c
--- orig/src/ppb_video_decoder.c	2015-06-10 19:49:55.000000000 +0200
+++ patched/src/ppb_video_decoder.c	2015-06-12 21:40:55.000000000 +0200
@@ -34,53 +34,58 @@
 #include "ppb_opengles2.h"
 #include "ppb_graphics3d.h"
 #include "config.h"
+#include "ffmpeg-compat.h"      // generated
 
 
-// ffmpeg/libav API changes over time
-#if (LIBAVUTIL_VERSION_INT < AV_VERSION_INT(51, 42, 0)) || \
-    (LIBAVUTIL_VERSION_INT == AV_VERSION_INT(51, 73, 101))
-
+// compatibilty definitions
+#if !HAVE_AVPixelFormat
+#define AVPixelFormat           PixelFormat
 #define AV_PIX_FMT_NONE         PIX_FMT_NONE
 #define AV_PIX_FMT_YUV420P      PIX_FMT_YUV420P
 #define AV_PIX_FMT_VAAPI_VLD    PIX_FMT_VAAPI_VLD
-#define AV_PIX_FMT_VDPAU        (-2)                // doesn't exist at all in older versions
-
-#define AV_CODEC_ID_H264        CODEC_ID_H264
+#endif // !HAVE_AVPixelFormat
 
-#define AVPixelFormat           PixelFormat
+#if !HAVE_AV_PIX_FMT_VDPAU
+#define AV_PIX_FMT_VDPAU        (-2)
+#endif // !HAVE_AV_PIX_FMT_VDPAU
 
-#endif
+#if !HAVE_AVCodecID
+#define AV_CODEC_ID_H264        CODEC_ID_H264
+#endif // !HAVE_AVCodecID
 
-#if LIBAVUTIL_VERSION_INT < AV_VERSION_INT(52, 8, 0)
+#if !HAVE_av_frame_alloc
 static inline AVFrame *
 av_frame_alloc(void)
 {
     return avcodec_alloc_frame();
 }
+#endif // !HAVE_av_frame_alloc
 
+#if !HAVE_av_frame_free
 static inline void
 av_frame_free(AVFrame **frame)
 {
-    free(*frame);
+    av_free(*frame);
     *frame = NULL;
 }
-#endif
+#endif // !HAVE_av_frame_free
 
-#if LIBAVCODEC_VERSION_INT > AV_VERSION_INT(54, 41, 1)
+#if HAVE_AVCodecContext_get_buffer2
 #define AVCTX_HAVE_REFCOUNTED_BUFFERS   1
 #else
 #define AVCTX_HAVE_REFCOUNTED_BUFFERS   0
-#endif
+#endif // HAVE_AVCodecContext_get_buffer2
 
-#if LIBAVCODEC_VERSION_INT < AV_VERSION_INT(55, 52, 0)
+#if !HAVE_avcodec_free_context
 static
 void
 avcodec_free_context(AVCodecContext **pavctx)
 {
     avcodec_close(*pavctx);
-    av_freep(pavctx);
+    av_free(*pavctx);
+    *pavctx = NULL;
 }
-#endif
+#endif // !HAVE_avcodec_free_context
 
 
 static
@@ -451,9 +456,9 @@
                                         .height = vd->avctx->height };
 
     pp_resource_release(vd->self_id);
-    // TODO: how many surfaces do we need?
-    vd->ppp_video_decoder_dev->ProvidePictureBuffers(instance, vd->self_id, 21, &dimensions,
-                                                     GL_TEXTURE_2D);
+
+    vd->ppp_video_decoder_dev->ProvidePictureBuffers(instance, vd->self_id, MAX_VIDEO_SURFACES,
+                                                     &dimensions, GL_TEXTURE_2D);
     pp_resource_acquire(vd->self_id, PP_RESOURCE_VIDEO_DECODER);
 }
 
diff -Naur orig/src/pp_resource.h patched/src/pp_resource.h
--- orig/src/pp_resource.h	2015-06-10 19:49:55.000000000 +0200
+++ patched/src/pp_resource.h	2015-06-12 21:40:55.000000000 +0200
@@ -66,6 +66,8 @@
 
 #if HAVE_HWDEC
 #include <libavcodec/avcodec.h>
+#include <libavutil/avutil.h>
+#include <libavutil/common.h>
 #include <libavcodec/vaapi.h>
 #include <va/va.h>
 #endif // HAVE_HWDEC
