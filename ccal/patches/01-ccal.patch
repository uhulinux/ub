diff -Naurd a/src/cal.1 b/src/cal.1
--- a/src/cal.1	2014-06-21 00:06:47.000000000 +0200
+++ b/src/cal.1	2014-06-22 19:16:29.000000000 +0200
@@ -1,10 +1,10 @@
 .\" @(#)cal.1 4.0 01/01/2002
-.TH CAL 1 "01 January 2002"
+.TH CCAL 1 "28 January 2004"
 .SH NAME
-.B cal 
+.B ccal 
 \- displays a calendar
 .SH SYNOPSIS
-.B cal
+.B ccal
 [
 .I options
 ]
@@ -15,7 +15,7 @@
 .I year
 ]
 .br
-.B cal
+.B ccal
 [
 .I options
 ]
@@ -26,12 +26,12 @@
 .I year
 ]
 .SH DESCRIPTION
-.IX  cal  ""  "\fLcal\fP \(em display calendar"
+.IX  ccal  ""  "\fLcal\fP \(em display calendar"
 By default,
-.B cal
+.B ccal
 will display a calendar for the current month with the current day
 marked.  By specifing certain arguments,
-.B cal
+.B ccal
 will display a calendar for a whole year or a specified month and year.
 .LP
 The transition from the Julian to Gregorian calendar is assumed to have
@@ -40,9 +40,9 @@
 unusual.
 .LP
 If displaying a calendar in the single-month format,
-.B cal
+.B ccal
 will look for a date file. If found,
-.B cal
+.B ccal
 will read the file, looking for special date descriptions for
 that month which will be displayed to the right of the calendar.  By default,
 up to 24 appointments may be displayed per month.
@@ -51,7 +51,7 @@
 month may also be displayed with some limitations (currently, special dates
 such as the 3rd Thursday of will not be calculated for next month).
 .LP
-.B cal
+.B ccal
 can also optionally use colors when displaying the calendar.  It will not
 display colors any time the calendar is not directly displaying on the
 console.  This is generally the desired behavior when your redirecting
@@ -90,7 +90,10 @@
 specify multiple data file names.
 .TP
 .B \-\-e[urope]
-Use European format (first weekday is Monday).
+Use European format (first weekday is Monday), this is the default.
+.TP
+.B \--a[merican]
+Use North American format (first weekday is Sunday).
 .TP
 .B \-\-f[uture]
 If current month is displayed, then show only future appointments from the
@@ -128,38 +131,38 @@
 Display a calendar for the current year.
 .LP
 There is an optional environment variable that can be used by
-.B cal
+.B ccal
 if found.  If CALOPT is set then
-.B cal
+.B ccal
 will read it and use any valid
 command line options found.  This allows any commonly used switches to
 be set in your environment and always used (e.g. --europe).
-.B Cal
+.B Ccal
 will produce its usage screen when run if any invalid options are set
 in this variable.
 .SH COMMAND EXAMPLES
 .LP
 .TP
-.B cal \-\-f \-\-d=my_dates
+.B ccal \-\-f \-\-d=my_dates
 display the current month and future appointments defined in file `my_dates'
 .TP
-.B cal 1996
+.B ccal 1996
 display the entire year of 1996
 .TP
-.B cal 9 1752
+.B ccal 9 1752
 display the month of September 1752
 .TP
-.B cal sep 1752
+.B ccal sep 1752
 same as above
 .TP
-.B cal January
+.B ccal January
 display January of the current year
 .TP
-.B cal help
+.B ccal help
 help message displayed for unrecognized arguments
 .SH DATE FILES
 .LP
-.B cal
+.B ccal
 will search for a date file called
 .I cal.dat
 in the directory it was executed from.  If not found it will search
@@ -172,7 +175,7 @@
 .I cal.dat
 in a system wide directory.  To find out where this location
 is you can run
-.I cal --help
+.I ccal --help
 which will display the location.
 .LP
 The special date descriptions specified
@@ -297,6 +300,21 @@
 Blank lines are ignored.  A line otherwise not in the above format
 is assume to specify a file name from which to read more events.
 The file is searched for in the usual places.
+.SH LOCALISATION
+.LP
+.B ccal
+will also use the user's locale definitions to determine which day
+to use as the starting weekday. This is overriden if the -europe or the -american
+command line switches are used.
+.PP
+If you do not set the -europe or -american switch, your locale is
+properly defined, and you see a different start weekday different
+from what you would expect, either
+.B ccal
+or your libc definitions are to blame. If you think this is
+a bug in
+.B ccal
+please report it.
 .SH COLOR ATTRIBUTES
 .LP
 .B cal
@@ -308,15 +326,14 @@
 directory for a file called
 .I .cal.col.
 If still not found, it will look
-for a global
-.I cal.col
-in a system wide directory.  To find out where this location
-is you can run
-.I cal --help
-which will display the location.
+for a global system-wide
+.I /etc/cal.col 
+You can confirm the location for the system-wide definition by running
+.I ccal --help
+which will display it.
 .LP
 Users may override the default colors used when displaying calendars.
-This may be done by creating a color definition file.
+This may be done by creating a color definition file in their home directory.
 .LP
 Example of a color definition file:
 
@@ -370,10 +387,16 @@
 Color definition file
 .TP
 .B $HOME/.cal.dat
-UNIX local date file
+User's local date file
 .TP
 .B $HOME/.cal.col
-UNIX local color file
+User's local color file
+.TP
+.B /etc/cal.dat
+System wide definition for dates
+.TP
+.B /etc/cal.col
+System wide definition for colors
 .TP
 .B ~/.dates
 Date file used with UNIX reminder program and can be used with cal.
@@ -391,3 +414,4 @@
 .BR date (1),
 .BR reminder (1),
 .BR rs (1)
+
diff -Naurd a/src/cal.c b/src/cal.c
--- a/src/cal.c	2014-06-21 00:56:21.000000000 +0200
+++ b/src/cal.c	2014-06-22 19:35:08.000000000 +0200
@@ -170,6 +170,8 @@
 
 #include <stdio.h>
 #include <stdlib.h>
+#include <errno.h>
+#include <limits.h>
 #include <time.h>
 #include <ctype.h>
 #include <string.h>
@@ -268,12 +270,8 @@
 
 char *mon_attr, *wk_attr, *day_attr, *spclday_attr, *line_attr[MAXAPPTS];
 
-/* By default we want colors under DOS and OS/2 but not UNIX */
-#ifndef UNIX
+/* By default we want colors */
 int crt = 1;
-#else
-int crt = 0;
-#endif
 
 char *color_file = "cal.col";
 #endif /* USE_COLOR */
@@ -285,7 +283,7 @@
 short days[] = 
     { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 },
     thisday, thismonth, thisyear, discard_old = 0, prog_pause = 0,
-    thismonth_only = 0, europe = 0, numfiles = 0, julian = 0,
+    thismonth_only = 0, europe = 1, numfiles = 0, julian = 0,
     month3 = 0, year = 0, maxappts = 24, continu = 0;
 
 char *months[] = { 
@@ -317,6 +315,9 @@
 short reminderdays(short, short);
 FILE *efopen(const char *, const char *);
 void  usage(void);
+int valid_integer (const char *, int *);
+int valid_short_integer (const char *, short int *);
+int valid_ushort_integer (const char *, unsigned short int *);
 
 /* commandline argument list */
 static struct arglist {
@@ -336,6 +337,7 @@
     { "today",      0 },
     { "year",       0 },
     { "continue",   0 },
+    { "american",   0 },
 #ifdef USE_COLOR
     { "use-color",  0 },
     { "nocolor",    0 },
@@ -418,12 +420,17 @@
         continu = atoi(optarg);    /* display successive months */
         if (continu > 0) maxappts = 8;
         break;
-#ifdef USE_COLOR
     case 13:
-        crt = 1; break;
+       /* It's important to setup the dayline or otherwise it will not
+        * reset the value if the Locale contradicts this */
+        dayline = USdays;         /* american format */
+        europe = 0;  break;
+#ifdef USE_COLOR
     case 14:
-        crt = 0; break;
+        crt = 1; break;
     case 15:
+        crt = 0; break;
+    case 16:
         color_file = optarg; break;
 #endif /* USE_COLOR */
     }
@@ -518,6 +525,49 @@
     }
 }
 
+/* Test if data provided is a valid integer.
+ * If it is, the put the resulting value in the result */
+int valid_integer (const char *src, int *result)
+{
+    long tmp;
+    char *s;
+
+    tmp = strtol(src,&s,10);
+    if (s == src || *s != '\0' || errno == ERANGE ||
+            tmp > INT_MAX || tmp < INT_MIN ) return 0;
+    if (result) *result = (int)tmp;
+    return 1;
+}
+
+/* Test if data provided is a valid short integer.
+ * If it is, the put the resulting value in the result */
+int valid_short_integer (const char *src, short int *result)
+{
+    long tmp;
+    char *s;
+
+    tmp = strtol(src,&s,10);
+    if (s == src || *s != '\0' || errno == ERANGE ||
+            tmp > SHRT_MAX || tmp < SHRT_MIN ) return 0;
+    if (result) *result = (int)tmp;
+    return 1;
+}
+
+/* Test if data provided is a valid unsigned short integer.
+ * If it is, the put the resulting value in the result */
+int valid_ushort_integer (const char *src, unsigned short int *result)
+{
+    long tmp;
+    char *s;
+
+    tmp = strtol(src,&s,10);
+    if (s == src || *s != '\0' || errno == ERANGE ||
+            tmp > USHRT_MAX || tmp < 0 ) return 0;
+    if (result) *result = (int)tmp;
+    return 1;
+}
+
+
 /*===========================================================================
  * MAIN
  * Process command line, allocate and initialize, etc.
@@ -539,6 +589,18 @@
 
 #ifdef HAVE_LOCALE_H
     setlocale(LC_ALL, "");
+#ifdef HAVE_LANGINFO_H
+    /* Note '1' is Sunday (default), '2' is Monday */
+    europe = (int)(nl_langinfo(_NL_TIME_FIRST_WEEKDAY))[0]-1;
+    if ( europe == 1 ) {
+           dayline = Europedays;
+    } else {
+           /* Don't accept a value which is not 0 or 1 */
+           /* We are not prepared to deal with it (because of the dayline) */
+           /* NOTE: Some locales set up 7 for the first weekday */
+           europe = 0;
+    }
+#endif
 #endif
 
     clearfilenames();
@@ -725,7 +787,13 @@
              * appointments will not be displayed.
              */
             columns = julian ? 2 : 3;
-            fixtab (thisyear);
+
+            if ( ! valid_short_integer (argv[1], &y) ) {
+                fputs("Invalid value in year parameter.\n", stderr);
+                usage();
+                return (4);   /* Let user know failed because invalid year */
+            }
+            fixtab (y);
             memset(str, ' ', YEARWID);
             stryearcpy(str+(YEARWID/2)-(stryearlen(thisyear)/2), thisyear);
             fputs(str, stdout);
@@ -753,8 +821,8 @@
         /* drop through to next case */
 
     case 3:
-        m = atoi(argv[1]);
-        if (strlen(argv[1]) >= 3) {
+        /* parse months in three letter format */
+        if (strlen(argv[1]) >= 3 && ! isdigit(argv[1][0]) ) {
             for (i = 1; i <= 12; i++) {
                 strcpy(str, months[i]);
                 if (!strncasecmp(argv[1], str, 3)) {
@@ -762,6 +830,12 @@
                     break;
                 }
             }
+        } else {
+            if ( ! valid_short_integer (argv[1], &m) || m <= 0 || m >12  ) {
+                fputs("Invalid value in month parameter.\n", stderr);
+                usage();
+                return (3);   /* Let user know failed because invalid month */
+            }
         }
         if (!m) {
             usage();
@@ -770,9 +844,13 @@
         }
         if (argc == 3) {
             if (isdigit(argv[2][0]) || (isdigit(argv[1][1]) &&
-                                        argv[2][0] == '-'))
-                y = atoi(argv[2]);
-            else {
+                                        argv[2][0] == '-')) {
+                if ( ! valid_short_integer (argv[2], &y) ) {
+                    fputs("Invalid value in year parameter.\n", stderr);
+                    usage();
+                    return (4);   /* Let user know failed because invalid year */
+                }
+            } else {
                 usage();
                 status=4;  /* failed because invalid number parameters */
                 break;
@@ -1528,7 +1606,8 @@
 short reminderdays(short m, short y)
 {
     FILE *fp;
-    short mo, dy, yr, n, wn, weeklyflag, filenum, j, hiappt = 1,
+    short mo, dy;
+    short yr, n, wn, weeklyflag, filenum, j, hiappt = 1,
         hilight = (m == thismonth && y == thisyear);
     char **lln = NULL, *ll;
     char *descrip;
@@ -1728,10 +1807,9 @@
 void usage()
 {
 fputs("\n\
-cal 4.1 - Display a monthly or yearly calendar, with optional appointments.\n\n\
-Usages:  cal [options] [[1|2|3|...|12] year]\n\
-         cal [options] [jan|feb|mar|...|dec] [year]\n\n\
-Options:\n\
+ccal 4.0 - Display a monthly or yearly calendar, with optional appointments.\n\n\
+Usages:  ccal [options] [[1|2|3|...|12] year]\n\
+         ccal [options] [jan|feb|mar|...|dec] [year]\n\n\Options:\n\
   --3[months]         Display prev/current/next month\n\
   --a[ppts]=n         Display maximum of n (8-50) appointments (24)\n\
   --con[tinue]=n      Display successive months n times after the first\n\
@@ -1748,6 +1826,7 @@
 
 fputs("\
   --e[urope]          European format (first day is Monday)\n\
+  --a[merican]        American format (first day is Sunday)\n\
   --f[uture]          Show only future appointments on current month\n\
   --j[ulian]          Display Julian dates (days numbered from 1 January\n\
   --m[onday]          Display Monday as first day of week (same as --europe)\n\
diff -Naurd a/src/makefile.unx b/src/makefile.unx
--- a/src/makefile.unx	2014-06-21 00:44:40.000000000 +0200
+++ b/src/makefile.unx	2014-06-22 19:42:56.000000000 +0200
@@ -14,22 +14,23 @@
 
 # Using -Wall will create some warnings on SunOS that can be ignored.
 # CFLAGS=-O2 -Wall -DUNIX -DUSE_REMINDER -DPREFIX=$(DEFAULT_DATA_DIR)
-CFLAGS=-O2 -Wall -DUNIX -DUSE_REMINDER
+CFLAGS=-O2 -Wall -DUNIX -DUSE_REMINDER -DPREFIX=$(DEFAULT_DATA_DIR) -DHAVE_LOCALE_H -DHAVE_LANGINFO_H
 
 BINDIR=/usr/bin
-MANDIR=/usr/man
+MANDIR=/usr/share/man
 
 default: cal
 
 cal     : cal.c
-	$(CC) $(CFLAGS) -o cal cal.c
+	$(CC) $(CFLAGS) -o ccal cal.c
 
 cal.man : cal.1
 	nroff -man cal.1 | col > cal.man
 
-install: cal
-	install -c -m 755 cal $(BINDIR)/cal
-	install -c -m 644 cal.1 $(MANDIR)/man1/cal.1
+install:
+	install -c -m 755 ccal $(DESTDIR)$(BINDIR)/ccal
+	install -c -m 644 cal.1 $(DESTDIR)$(MANDIR)/man1/ccal.1
+	install -c -m 644 ../cal.col $(DESTDIR)/etc/cal.col
 
 clean:
 	$(RM) cal
